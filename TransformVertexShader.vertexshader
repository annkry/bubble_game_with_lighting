#version 330
#extension GL_ARB_explicit_uniform_location : require
layout(location = 0) in vec3 vertexPosition_modelspace;
layout(location = 1) in vec3 colorRGB;
layout(location = 2) uniform vec3 Cameraposition_worldspace;
layout(location = 11) uniform float ifPawnView;
layout(location = 3) uniform mat4 MVP;
layout(location = 4) uniform float lightMode;

out vec3 fragmentColor;
out float distance;
out float pawnView;
out float ifLightMode;

void main(){	
	gl_Position =  MVP * vec4(vertexPosition_modelspace, 1.0);
	fragmentColor = colorRGB;
	distance = length(Cameraposition_worldspace - vertexPosition_modelspace);
	pawnView = ifPawnView;
	ifLightMode = lightMode;
}

